
-- Drop tables if they already exist
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS customers;
DROP TABLE if EXISTS event_publication;
DROP TABLE if EXISTS order_items;
DROP TABLE if EXISTS orders;
DROP TABLE if EXISTS products;
DROP TABLE if EXISTS stock_items;

-- Creation of the customers table
CREATE TABLE customers (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    customer_id VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    contact_number VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    UNIQUE (customer_id),
    UNIQUE (email)
);

-- Creation of the products table
CREATE TABLE products (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_id VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL CHECK (price > 0),
    category VARCHAR(255) NOT NULL,
    UNIQUE (product_id)
);

CREATE TABLE customers (id bigint generated by default as identity, address varchar(255), contact_number varchar(255), customer_id varchar(255), email varchar(255), name varchar(255), primary key (id));
CREATE TABLE event_publication (completion_date timestamp(6) with time zone, publication_date timestamp(6) with time zone, id uuid not null, event_type varchar(255), listener_id varchar(255), serialized_event varchar(255), primary key (id));
CREATE TABLE order_items (price_per_item float(53) not null, quantity integer not null, id bigint generated by default as identity, order_id bigint, product_id varchar(255) not null, primary key (id));
CREATE TABLE orders (id bigint generated by default as identity, billing_information varchar(255) not null, customer_id varchar(255) not null, order_id varchar(255), shipping_address varchar(255) not null, status varchar(255) not null, primary key (id));
CREATE TABLE products (price numeric(38,2) not null, id bigint generated by default as identity, category varchar(255), description varchar(255), name varchar(255), product_id varchar(255), primary key (id));
CREATE TABLE stock_items (reorder_threshold integer not null check (reorder_threshold>=0), stock_level INTEGER NOT NULL CHECK (stock_level>=0), id bigint generated BY DEFAULT AS IDENTITY, product_id varchar(255) not null, stock_item_id varchar(255), primary key (id));
ALTER TABLE if EXISTS order_items ADD CONSTRAINT FKbioxgbv59vetrxe0ejfubep1w FOREIGN KEY (order_id) REFERENCES orders